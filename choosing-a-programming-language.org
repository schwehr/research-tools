#+BEGIN_COMMENT
Local Variables:
mode: org
mode: flyspell
mode: auto-fill
End:
#+END_COMMENT

#+STARTUP: showall

#+TITLE:     Chapter XXX: Picking which programming language(s) to learn.
#+AUTHOR:    Kurt Schwehr
#+EMAIL:     schwehr@ccom.unh.edu>
#+DATE:      $Date: $
#+DESCRIPTION: Marine Research Data Manipulation and Practices - Databases
#+TEXT:      $Id: kurt-2010.org 13030 2010-01-14 13:33:15Z schwehr $
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:t d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_HOME: http://schwehr.org

* Introduction

Computer scientists often learn new programming languages just to
expand their thinking.  Earth scientists do not usually have that
luxury.

Choosing which programming language(s) (and software) to learn is a
very important decision for several reasons.  First, you have a
limited amount of time for learning.  Generally we have a job to do
that dominates over the time available to put new things in your
head.  Second, the computer languages that you learn influence the way
you think.  If you start with a language with a clean design and
powerful features, you will be more able to figure out how to get
through your programming tasks to accomplish the data analysis at
hand.  Finally, choosing a good language means you have a tool for
communication that will stick with you for years to come.  A good
programming language can more explicity and concretely express how you
process data than English.

In this section, we will go over a range of programming languages (big
and small) that you might encounter and that you could choose to
learn.  Right off, here are the languages that I encourage you to
learn as you begin into the world of using computers.

- Python: a good all around clean and flexible language that has a
  great features
- BASH: A "shell" programming language that surves as a command line.
  Not great, but essential for putting the pieces together
- SQL: The defacto database programming language of our time.  Not
  overly flexible, but critical for managing data.

In addition, this book will cover lots of other languages to give you
a sense of what they can do so that you can judge for yourself if you
should invest time in them.

** Factors in judging a language

Objector Oriented, Functional, Procedural... what does it all mean.

** Now on to the languages!

*** SED

Stream editor

*** Awk/Gawk

AWK is a pretty complete basic language, but it is not worth digging
into.  If you find yourself writing more than one line of AWK, run to
Python.  Skill in AWK is wasted time that should be spent learning a
language that will grow more with you.

***

